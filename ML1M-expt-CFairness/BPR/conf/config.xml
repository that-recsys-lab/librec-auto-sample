<?xml version="1.0"?>
<!-- Configuration file for ML-Experimentation-Analysis on Provider side fairness on recommendation algos
	 Expt 02: Bayesian Personalized Ranking on ML1M dataset-->

<librec-auto>
	<random-seed>202001</random-seed>
	<thread-count>1</thread-count>
	<library src="system">default-algorithms.xml</library>
	
	<!-- DATA SECTION -->
	<data>
		<data>../ML1M-expt/data</data>
		<format>UIR</format>
		<data-file format="text">ratings.csv</data-file>
	</data> 
	
	<!-- FEATURES SECTION-->
	<features>
		<appender-class>net.librec.data.convertor.appender.UserFeatureAppender</appender-class>
		<user-feature-file>ML1M_membership_file.csv</user-feature-file>
	</features>
	
	<!-- SPLITTER SECTION -->
	<splitter>
		<model count="3">kcv</model>
		<dim>userfixed</dim>
		<ratio>0.8</ratio>
		<save>true</save>
	</splitter>
	
	<!-- ALGORITHM SECTION -->
	<!-- Using Bayesian Personalized Ranking for experimentation purposes. -->
	<alg>   
		<class>bpr</class>
		<learn-rate>0.01</learn-rate>
		<learn-rate-max>0.01</learn-rate-max>
		<learn-rate-decay>1.0</learn-rate-decay>
		<bold-driver>false</bold-driver>
		<iterator-max>
			<value>5</value>
		</iterator-max>
		<user-reg>
 			<value>0.1</value>
		</user-reg>
		<item-reg>
 			<value>0.001</value>
		</item-reg>
		<num-factors>
			<value>150</value>
		</num-factors>
	</alg>

	<!-- METRICS SECTION -->
	<metric>
		<ranking>true</ranking>
		<list-size>10</list-size>
		<class>ndcg,recall,precision,net.librec.eval.fairness.AbsoluteUnfairnessEvaluator,net.librec.eval.fairness.DiscountedProportionalCFairnessEvaluator</class>		<protected-feature>F</protected-feature>
	</metric>
	
		<!-- POST-PROCESSING SECTION -->
	<post>
		<script lang="python3" src="system">
			<script-name>results_to_csv.py</script-name>
			<param name="option">all</param>
		</script> 

		<script lang="python3" src="system">
			<script-name>result_graphics.py</script-name>
			<param name="browser">true</param>
		</script> 

		<script lang="python3" src="system">
			<script-name>slack_post.py</script-name>
			<param name="option">message</param>
			<param name="channel">la_bot</param>
			<param name="encrypted_key">../keys/slack-api.enc</param>
			<param name="message">Experiment complete</param>
			<param name="password"/>
		</script> 

		<script lang="python3" src="system">
			<script-name>slack_post.py</script-name>
			<param name="option">file</param>
			<param name="channel">la_bot</param>
			<param name="encrypted_key">../keys/slack-api.enc</param>
			<param name="file">post/viz-bar-NormalizedDCG.jpg</param>
			<param name="message">NDCG for the experiment</param>
			<param name="password"/>
		</script> 
	</post> 
</librec-auto>
